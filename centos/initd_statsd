#!/bin/sh
#
# statsd Service to provide data collection for graphing with graphite.
#
# chkconfig:   2345 50 50
# description: Service to provide data collection for graphing with graphite.

### BEGIN INIT INFO
# Provides: statsd
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:
# Default-Stop:
# Short-Description: statsd service
# Description: Service to provide data collection for graphing with graphite.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

exec="/usr/bin/node"
script="/usr/share/statsd/stats.js"
prog="statsd"
config="/etc/statsd/config.js"
logfile="/var/log/statsd.out"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

touch $logfile
chown $prog:$prog $logfile

exit_not_found() {
    echo "Some configuration is missing"
    exit 6
}

start() {
    [ -x $exec ] || exit 5
    [ -f $script ] || exit_not_found
    [ -f $config ] || exit_not_found
    echo -n $"Starting $prog: "
    daemon --check --pidfile=/var/run/$prog.pid --user=$prog "NODE_PATH=$NODE_PATH $exec $script $config >> $logfile 2>&1 &"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    pid=`ps -aefw | grep "$exec $script" | grep -v " grep " | awk '{print $2}'`
    echo $pid > /var/run/$prog.pid
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    status -p /var/run/$prog.pid $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?

